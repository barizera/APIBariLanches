// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  favorite Favorite[]
  orders Order[]

  @@map("user")
}

model Product {
  id String @id @default(uuid())
  name String @unique
  description String
  price Float
  image String
  createAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId String? @map("category_id")

  favorites Favorite[]
  orders Order[]
  @@map("products")
}

model Table {
  id String @id @default(uuid())
  number Int @unique
  createAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("update_at")

  @@map("table")
  orders Order[]
}

model Category {
  id String @id @default(uuid())
  name String @unique
  createAt DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("update_at")

  products Product[]

  @@map("category")
}

model Favorite {
  id String @id @default(uuid())
  createAt DateTime @default(now()) @map("create_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  product Product? @relation(fields: [productName], references: [name], onDelete: SetNull)
  productName String? @map("product_name")

  @@map("favorite")
  @@unique([userId, productName])
}

model Order {
  id String @id @default(uuid())
  createAt DateTime @default(now()) @map("create_at")

  table Table? @relation(fields: [tableNumber], references: [number], onDelete: SetNull)
  tableNumber Int? @map("table_number")

  user User @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId String @map("user_id")

  products Product[]

  @@map("order")
}
